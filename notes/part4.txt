1234567890---------2---------3---------4---------5---------6---------7-2-------8---------9---------1
PLAYLIST: https://www.youtube.com/playlist?list=PLMC91Ry9EhRKUn0MIdgXrZiptF7nVyYoQ
https://www.youtube.com/watch?v=Tzs3_pl410M Part4 - World and Cell classes
https://github.com/ofcan/game-of-life-ruby


A Ruby Tutorial: Implementing John H. Conway's "Game of Life"


In the World class, objects have ROWS & COLS.
Together the sum of each (ROW, COL) pair creates a CELL_GRID.
Let's tell the rspec file to check for this:
"spec_game_of_life.rb"
 14     it 'should respond to proper methods' do
 15       expect(subject.respond_to?(:rows))
 16       expect(subject.respond_to?(:cols))
 17       expect(subject.respond_to?(:cell_grid))  # <----
 18       
 19     end

If we test with rspec, it will fail:

patrick@ubuntu:~/Ruby/GameOfLife$ rspec spec_game_of_life.rb
F

...so then create the CELL GRID in the World class
"game_of_life.rb"
  4   attr_accessor :rows, :cols, :cell_grid    # These methods are now accessible to rspec

And now let's initialize the cell_grid:
"game_of_life.rb"
  8     @cell_grid = Array.new(rows) do |row|
  9                    Array.new(cols) do |col|
 10                    end
 11                  end


And now we test the cell_grid instance variable:
"spec_game_of_life.rb"
 19     it 'should create proper cell_grid upon initialization' do
 20       expect(subject.cell_grid.is_a?(Array)).to be true
 21     end

...and it passes the rspec test (now there are 3 examples)

This only tests the main array. Let's test the nested arrays:
"spec_game_of_life.rb"
 22       expect(subject.cell_grid.each do |row|
 23         row.is_a?(Array)).to be true
 24       end

NOTE: Having trouble with expect vs. code block
http://stackoverflow.com/questions/39556037/can-rspecs-expect-parse-a-block-to-confirm-a-nested-array-grid






